name: CI
on: [push, pull_request]
jobs:
  laravel:
    name: Laravel (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: lrtest
      DB_USERNAME: root
      DB_PASSWORD: secret
      BROADCAST_DRIVER: log
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: lrtest
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        #php-versions: ['7.2', '7.3', '7.4']
        php-versions: ['7.4']
        include:
          report-coverage: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v1 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug #optional
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-scripts
      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.ci', '.env');"
          php artisan key:generate
          composer dump-autoload && php artisan clear-compiled && php artisan config:clear && php artisan optimize 

      - name: Set Branch and Commit SHA
        run: |
          echo "::set-env name=GIT_BRANCH::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"
          echo "::set-env name=GIT_COMMIT_SHA::$(echo ${git rev-parse --short "$GITHUB_SHA"})"

      - name: Install front-end dependencies
        run: |
          npm install
          npm run dev
      - name: Clear Config
        run: php artisan config:clear
      - name: Run Migration
        run: php artisan migrate -v
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}

          
      - name: Prepare Test Reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter 
          chmod +x ./cc-test-reporter 
          ./cc-test-reporter before-build

      - name: Serve Site
        run: |
          php artisan serve --host=lrtest.test --port=8000 &
          sleep 5

      - name: Test and publish code coverage
        if: matrix.report-coverage
        uses: paambaati/codeclimate-action@v2.3.0
        env:
          # Get it on https://codeclimate.com/repos/{repo id}/settings/test_reporter
          CC_TEST_REPORTER_ID: 27681cd463198a5982ce44d5c19976f9f9b0e0e33dfec4bb781709ac064cd871
        with:
          # The report file must be there, otherwise Code Climate won't find it
          coverageCommand: php vendor/bin/phpunit --coverage-text --coverage-clover ./clover.xml
          debug: true
      - name: Test
        if: "!matrix.report-coverage"
        run: php vendor/bin/phpunit --coverage-text    